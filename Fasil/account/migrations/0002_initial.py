# Generated by Django 4.2.5 on 2023-12-28 23:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('taggit', '0005_auto_20220424_2025'),
        ('debate', '0001_initial'),
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='team',
            name='debate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='debate.debate'),
        ),
        migrations.AddField(
            model_name='team',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='team_members', to='account.debatemember'),
        ),
        migrations.AddField(
            model_name='sponsor',
            name='social',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='sponsor',
            name='sponsored_debates',
            field=models.ManyToManyField(blank=True, related_name='sponsor_sponsored_debates', to='debate.debate'),
        ),
        migrations.AddField(
            model_name='sponsor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='debateviewer',
            name='academic_backgrounds',
            field=models.ManyToManyField(blank=True, related_name='viewer_academic_backgrounds', to='account.academicbackground'),
        ),
        migrations.AddField(
            model_name='debateviewer',
            name='academic_interests',
            field=models.ManyToManyField(blank=True, related_name='viewer_academic_interests', to='account.academicinterest'),
        ),
        migrations.AddField(
            model_name='debateviewer',
            name='related_debates',
            field=models.ManyToManyField(blank=True, related_name='viewer_related_debates', to='debate.debate'),
        ),
        migrations.AddField(
            model_name='debateviewer',
            name='related_quote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viewer_related_quote', to='debate.quote'),
        ),
        migrations.AddField(
            model_name='debateviewer',
            name='social',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of social accounts[Facebook, Twitter, Linkedin].', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Social Accounts'),
        ),
        migrations.AddField(
            model_name='debateviewer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='debatemember',
            name='academic_backgrounds',
            field=models.ManyToManyField(blank=True, related_name='member_academic_backgrounds', to='account.academicbackground'),
        ),
        migrations.AddField(
            model_name='debatemember',
            name='academic_interests',
            field=models.ManyToManyField(blank=True, related_name='member_academic_interests', to='account.academicinterest'),
        ),
        migrations.AddField(
            model_name='debatemember',
            name='debate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='debate.debate'),
        ),
        migrations.AddField(
            model_name='debatemember',
            name='related_debates',
            field=models.ManyToManyField(blank=True, related_name='member_related_debates', to='debate.debate'),
        ),
        migrations.AddField(
            model_name='debatemember',
            name='related_quote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_related_quote', to='debate.quote'),
        ),
        migrations.AddField(
            model_name='debatemember',
            name='social',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of social accounts[Facebook, Twitter, Linkedin].', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Social Accounts'),
        ),
        migrations.AddField(
            model_name='debatemember',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='academicinterest',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='academicbackground',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
